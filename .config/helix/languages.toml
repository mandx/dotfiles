[language-server.eslint]
command = "vscode-eslint-language-server"
args = [ "--stdio" ]

[language-server.eslint.config]
codeAction.disableRuleComment = {}
codeAction.showDocumentation = {}
codeActionsOnSave = { mode = "all", "source.fixAll.eslint" = true }
format = { enable = true }
nodePath = ""
quiet = false
rulesCustomizations = []
run = "onType"
validate = "on"
experimental = {}
problems = { shortenToSingleLine = false }

[language-server.typescript-language-server]
config.documentFormatting = false

[language-server.deno-lsp]
command = "deno"
args = ["lsp"]
environment = { NO_COLOR = "1" }

[language-server.deno-lsp.config.deno]
enable = true
# Uncomment to enable completion of unstable features of Deno
# unstable = true
# Uncomment to cache dependencies on save
cacheOnSave = true
cache = true
lint = true
# Enable completion of importing from registries
# Enable completion of function calls
suggest.completeFunctionCalls = false
suggest.imports = { hosts = { "https://deno.land" = true } }
# Uncomment to enable inlay hints
inlayHints.parameterNames.enabled = "all"
inlayHints.parameterTypes.enabled = true
inlayHints.variableTypes.enabled = true
inlayHints.propertyDeclarationTypes.enabled  = true
inlayHints.functionLikeReturnTypes.enabled = true
inlayHints.enumMemberValues.enabled = true

[[language]]
name = "typescript"
language-servers = [ "typescript-language-server", "eslint" ]
formatter = { command = "prettier", args = [ "--parser", "typescript" ] }

[[language]]
name = "tsx"
language-servers = [ "typescript-language-server", "eslint" ]
formatter = { command = "prettier", args = [ "--parser", "typescript" ] }

[[language]]
name = "javascript"
language-servers = [ "typescript-language-server", "eslint" ]
formatter = { command = "prettier", args = [ "--parser", "typescript" ] }

[[language]]
name = "json"
auto-format = false
